<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/Crashlytics.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/Crashlytics</TokenIdentifier>
			<Abstract type="html">Add logging that will be sent with your crash data. This logging will show up in the system.log
and your Crashlytics dashboard. It is not recommended for Release builds.</Abstract>
			<DeclaredIn>Crashlytics.h</DeclaredIn>
			
			<NodeRef refid="53"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Crashlytics/startWithAPIKey:</TokenIdentifier>
			<Abstract type="html">The recommended way to install Crashlytics into your application is to place a call
to +startWithAPIKey: in your -application:didFinishLaunchingWithOptions: method.</Abstract>
			<DeclaredIn>Crashlytics.h</DeclaredIn>			
			
			<Declaration>+ (Crashlytics *)startWithAPIKey:(NSString *)apiKey</Declaration>
			
			
			<Anchor>//api/name/startWithAPIKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Crashlytics/startWithAPIKey:delegate:</TokenIdentifier>
			<Abstract type="html">If you need the functionality provided by the CrashlyticsDelegate protocol, you can use
these convenience methods to activate the framework and set the delegate in one call.</Abstract>
			<DeclaredIn>Crashlytics.h</DeclaredIn>			
			
			<Declaration>+ (Crashlytics *)startWithAPIKey:(NSString *)apiKey delegate:(NSObject&lt;CrashlyticsDelegate&gt; *)delegate</Declaration>
			
			
			<Anchor>//api/name/startWithAPIKey:delegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Crashlytics/sharedInstance</TokenIdentifier>
			<Abstract type="html">Access the singleton Crashlytics instance.</Abstract>
			<DeclaredIn>Crashlytics.h</DeclaredIn>			
			
			<Declaration>+ (Crashlytics *)sharedInstance</Declaration>
			
			
			<Anchor>//api/name/sharedInstance</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Crashlytics/crash</TokenIdentifier>
			<Abstract type="html">The easiest way to cause a crash - great for testing!</Abstract>
			<DeclaredIn>Crashlytics.h</DeclaredIn>			
			
			<Declaration>- (void)crash</Declaration>
			
			
			<Anchor>//api/name/crash</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Crashlytics/setUserIdentifier:</TokenIdentifier>
			<Abstract type="html">Many of our customers have requested the ability to tie crashes to specific end-users of their
application in order to facilitate responses to support requests or permit the ability to reach
out for more information. We allow you to specify up to three separate values for display within
the Crashlytics UI - but please be mindful of your end-user&apos;s privacy.</Abstract>
			<DeclaredIn>Crashlytics.h</DeclaredIn>			
			
			<Declaration>- (void)setUserIdentifier:(NSString *)identifier</Declaration>
			
			
			<Anchor>//api/name/setUserIdentifier:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Crashlytics/setObjectValue:forKey:</TokenIdentifier>
			<Abstract type="html">Set a value for a key to be associated with your crash data.</Abstract>
			<DeclaredIn>Crashlytics.h</DeclaredIn>			
			
			<Declaration>- (void)setObjectValue:(id)value forKey:(NSString *)key</Declaration>
			
			
			<Anchor>//api/name/setObjectValue:forKey:</Anchor>
		</Token>
		
	</File>
</Tokens>
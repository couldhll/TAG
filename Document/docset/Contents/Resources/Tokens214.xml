<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SDWebImageDownloader.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SDWebImageDownloader</TokenIdentifier>
			<Abstract type="html">Asynchronous downloader dedicated and optimized for image loading.</Abstract>
			<DeclaredIn>SDWebImageDownloader.h</DeclaredIn>
			
			<NodeRef refid="214"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageDownloader/setExecutionOrder:</TokenIdentifier>
			<Abstract type="html">Changes download operations execution order. Default value is SDWebImageDownloaderFIFOExecutionOrder.</Abstract>
			<DeclaredIn>SDWebImageDownloader.h</DeclaredIn>			
			
			<Declaration>@property (assign, nonatomic) SDWebImageDownloaderExecutionOrder executionOrder</Declaration>
			
			
			<Anchor>//api/name/executionOrder</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SDWebImageDownloader/executionOrder</TokenIdentifier>
			<Abstract type="html">Changes download operations execution order. Default value is SDWebImageDownloaderFIFOExecutionOrder.</Abstract>
			<DeclaredIn>SDWebImageDownloader.h</DeclaredIn>			
			
			<Declaration>@property (assign, nonatomic) SDWebImageDownloaderExecutionOrder executionOrder</Declaration>
			
			
			<Anchor>//api/name/executionOrder</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageDownloader/setValue:forHTTPHeaderField:</TokenIdentifier>
			<Abstract type="html">Set a value for a HTTP header to be appended to each download HTTP request.</Abstract>
			<DeclaredIn>SDWebImageDownloader.h</DeclaredIn>			
			
			<Declaration>- (void)setValue:(NSString *)value forHTTPHeaderField:(NSString *)field</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">The value for the header field. Use nil value to remove the header.</Abstract>
				</Parameter><Parameter>
					<Name>field</Name>
					<Abstract type="html">The name of the header field to set.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setValue:forHTTPHeaderField:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageDownloader/valueForHTTPHeaderField:</TokenIdentifier>
			<Abstract type="html">Returns the value of the specified HTTP header field.</Abstract>
			<DeclaredIn>SDWebImageDownloader.h</DeclaredIn>			
			
			<Declaration>- (NSString *)valueForHTTPHeaderField:(NSString *)field</Declaration>
			
			<ReturnValue><Abstract type="html">The value associated with the header field field, or nil if there is no corresponding header field.</Abstract></ReturnValue>
			<Anchor>//api/name/valueForHTTPHeaderField:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageDownloader/downloadImageWithURL:options:progress:completed:</TokenIdentifier>
			<Abstract type="html">Creates a SDWebImageDownloader async downloader instance with a given URL</Abstract>
			<DeclaredIn>SDWebImageDownloader.h</DeclaredIn>			
			
			<Declaration>- (id&lt;SDWebImageOperation&gt;)downloadImageWithURL:(NSURL *)url options:(SDWebImageDownloaderOptions)options progress:(SDWebImageDownloaderProgressBlock)progressBlock completed:(SDWebImageDownloaderCompletedBlock)completedBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL to the image to download</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options to be used for this download</Abstract>
				</Parameter><Parameter>
					<Name>progressBlock</Name>
					<Abstract type="html">A block called repeatedly while the image is downloading</Abstract>
				</Parameter><Parameter>
					<Name>completedBlock</Name>
					<Abstract type="html">A block called once the download is completed.
If the download succeeded, the image parameter is set, in case of error,
error parameter is set with the error. The last parameter is always YES
if SDWebImageDownloaderProgressiveDownload isn&apos;t use. With the
SDWebImageDownloaderProgressiveDownload option, this block is called
repeatedly with the partial image object and the finished argument set to NO
before to be called a last time with the full image and finished argument
set to YES. In case of error, the finished argument is always YES.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A cancellable SDWebImageOperation</Abstract></ReturnValue>
			<Anchor>//api/name/downloadImageWithURL:options:progress:completed:</Anchor>
		</Token>
		
	</File>
</Tokens>
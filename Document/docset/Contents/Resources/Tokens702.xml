<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/TAGContainerFuture.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/TAGContainerFuture</TokenIdentifier>
			<Abstract type="html">A class that implements this protocol waits for the container to be available and
provides access to the container.</Abstract>
			<DeclaredIn>TAGContainerOpener.h</DeclaredIn>
			
			<NodeRef refid="702"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TAGContainerFuture/get</TokenIdentifier>
			<Abstract type="html">Waits for the container to be available and returns the requested container.
This method will block until the container is available. The dispatch queue
will continue to run while the call is blocked.</Abstract>
			<DeclaredIn>TAGContainerOpener.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/TAGContainerOpener</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (TAGContainer *)get</Declaration>
			
			<ReturnValue><Abstract type="html">The requested container.</Abstract></ReturnValue>
			<Anchor>//api/name/get</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TAGContainerFuture/isDone</TokenIdentifier>
			<Abstract type="html">Returns whether the container is available. This container could be the
default container. To check if it is the default container, use
TAGContainer::isDefault.</Abstract>
			<DeclaredIn>TAGContainerOpener.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isDone</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the container is available. NO if TAGContainerFuture::get:
will block and wait for the container to be available.</Abstract></ReturnValue>
			<Anchor>//api/name/isDone</Anchor>
		</Token>
		
	</File>
</Tokens>
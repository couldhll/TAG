<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/NSATuple.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/NSATuple</TokenIdentifier>
			<Abstract type="html">@brief Manages ordered collections of 2 objects.</Abstract>
			<DeclaredIn>NSADataObject.h</DeclaredIn>
			
			<NodeRef refid="101"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSATuple/setFirst:</TokenIdentifier>
			<Abstract type="html">@brief first object</Abstract>
			<DeclaredIn>NSADataObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id first</Declaration>
			
			
			<Anchor>//api/name/first</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/NSATuple/first</TokenIdentifier>
			<Abstract type="html">@brief first object</Abstract>
			<DeclaredIn>NSADataObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id first</Declaration>
			
			
			<Anchor>//api/name/first</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSATuple/setSecond:</TokenIdentifier>
			<Abstract type="html">@brief second object</Abstract>
			<DeclaredIn>NSADataObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id second</Declaration>
			
			
			<Anchor>//api/name/second</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/NSATuple/second</TokenIdentifier>
			<Abstract type="html">@brief second object</Abstract>
			<DeclaredIn>NSADataObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id second</Declaration>
			
			
			<Anchor>//api/name/second</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/NSATuple/tuple</TokenIdentifier>
			<Abstract type="html">@brief Creates and returns an empty tuple.</Abstract>
			<DeclaredIn>NSADataObject.h</DeclaredIn>			
			
			<Declaration>+ (id)tuple</Declaration>
			
			<ReturnValue><Abstract type="html">An empty tuple.</Abstract></ReturnValue>
			<Anchor>//api/name/tuple</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSATuple/initWithFirst:second:</TokenIdentifier>
			<Abstract type="html">@brief Initilize a tuple containing first as first object and second as second object.
@param first
Value for first
@param second
Value for second</Abstract>
			<DeclaredIn>NSADataObject.h</DeclaredIn>			
			
			<Declaration>- (id)initWithFirst:(id)first second:(id)second</Declaration>
			
			<ReturnValue><Abstract type="html">A tuple with first and second value.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithFirst:second:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/NSATuple/tupleWithFirst:second:</TokenIdentifier>
			<Abstract type="html">@brief Creates and returns a tuple containing first as first object and second as second object.</Abstract>
			<DeclaredIn>NSADataObject.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/NSATuple/initWithFirst:second:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)tupleWithFirst:(id)first second:(id)second</Declaration>
			
			
			<Anchor>//api/name/tupleWithFirst:second:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSATuple/count</TokenIdentifier>
			<Abstract type="html">@brief Returns the number of objects currently in the data object.</Abstract>
			<DeclaredIn>NSADataObject.m</DeclaredIn>			
			
			<Declaration>- (NSUInteger)count</Declaration>
			
			
			<Anchor>//api/name/count</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSATuple/objectAtIndex:</TokenIdentifier>
			<Abstract type="html">@brief Returns the object located at index.
@param index
An index within the bounds of data object.</Abstract>
			<DeclaredIn>NSADataObject.m</DeclaredIn>			
			
			<Declaration>- (id)objectAtIndex:(NSUInteger)index</Declaration>
			
			<ReturnValue><Abstract type="html">The object located at index.</Abstract></ReturnValue>
			<Anchor>//api/name/objectAtIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSATuple/:</TokenIdentifier>
			<Abstract type="html">@brief Returns the object located at index. Shortcut of @ref objectAtIndex:
@param index
An index within the bounds of data object.</Abstract>
			<DeclaredIn>NSADataObject.m</DeclaredIn>			
			
			<Declaration>- (id):</Declaration>
			
			<ReturnValue><Abstract type="html">The object located at index.</Abstract></ReturnValue>
			<Anchor>//api/name/:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSATuple/indexOfObject:</TokenIdentifier>
			<Abstract type="html">*  @brief Returns the lowest index whose corresponding member value is equal to a given object.
*  @param anObject
        An object.
*  @return The lowest index whose corresponding member value is equal to anObject. If none of the objects in the data object is equal to anObject, returns NSNotFound.</Abstract>
			<DeclaredIn>NSADataObject.m</DeclaredIn>			
			
			<Declaration>- (NSUInteger)indexOfObject:(id)anObject</Declaration>
			
			
			<Anchor>//api/name/indexOfObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSATuple/containsObject:</TokenIdentifier>
			<Abstract type="html">@brief Returns a Boolean value that indicates whether a given object is present in the array.
@param anObject
An object.</Abstract>
			<DeclaredIn>NSADataObject.m</DeclaredIn>			
			
			<Declaration>- (BOOL)containsObject:(id)anObject</Declaration>
			
			<ReturnValue><Abstract type="html">YES if anObject is present in the array, otherwise NO.</Abstract></ReturnValue>
			<Anchor>//api/name/containsObject:</Anchor>
		</Token>
		
	</File>
</Tokens>
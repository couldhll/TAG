<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/Facebook.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/Facebook</TokenIdentifier>
			<Abstract type="html">Main Facebook interface for interacting with the Facebook developer API.
Provides methods to log in and log out a user, make requests using the REST
and Graph APIs, and start user interface interactions (such as
pop-ups promoting for credentials, permissions, stream posts, etc.)</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>
			
			<NodeRef refid="108"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/initWithAppId:urlSchemeSuffix:andDelegate:</TokenIdentifier>
			<Abstract type="html">Initialize the Facebook object with application ID.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (id)initWithAppId:(NSString *)appId urlSchemeSuffix:(NSString *)urlSchemeSuffix andDelegate:(id&lt;FBSessionDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>appId</Name>
					<Abstract type="html">the facebook app id
@param urlSchemeSuffix
urlSchemeSuffix is a string of lowercase letters that is
appended to the base URL scheme used for Facebook Login. For example,
if your facebook ID is &quot;350685531728&quot; and you set urlSchemeSuffix to
&quot;abcd&quot;, the Facebook app will expect your application to bind to
the following URL scheme: &quot;fb350685531728abcd&quot;.
This is useful if your have multiple iOS applications that
share a single Facebook application id (for example, if you
have a free and a paid version on the same app) and you want
to use Facebook Login with both apps. Giving both apps different
urlSchemeSuffix values will allow the Facebook app to disambiguate
their URL schemes and always redirect the user back to the
correct app, even if both the free and the app is installed
on the device.
urlSchemeSuffix is supported on version 3.4.1 and above of the Facebook
app. If the user has an older version of the Facebook app
installed and your app uses urlSchemeSuffix parameter, the SDK will
proceed as if the Facebook app isn&apos;t installed on the device
and redirect the user to Safari.</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract type="html">the FBSessionDelegate</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithAppId:urlSchemeSuffix:andDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/authorize:</TokenIdentifier>
			<Abstract type="html">Starts a dialog which prompts the user to log in to Facebook and grant
the requested permissions to the application.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (void)authorize:(NSArray *)permissions</Declaration>
			
			
			<Anchor>//api/name/authorize:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/extendAccessToken</TokenIdentifier>
			<Abstract type="html">Attempt to extend the access token.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (void)extendAccessToken</Declaration>
			
			
			<Anchor>//api/name/extendAccessToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/extendAccessTokenIfNeeded</TokenIdentifier>
			<Abstract type="html">Calls extendAccessToken if shouldExtendAccessToken returns YES.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (void)extendAccessTokenIfNeeded</Declaration>
			
			
			<Anchor>//api/name/extendAccessTokenIfNeeded</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/shouldExtendAccessToken</TokenIdentifier>
			<Abstract type="html">Returns YES if the last time a new token was obtained was over 24 hours ago.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (BOOL)shouldExtendAccessToken</Declaration>
			
			
			<Anchor>//api/name/shouldExtendAccessToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/handleOpenURL:</TokenIdentifier>
			<Abstract type="html">This function processes the URL the Facebook application or Safari used to
open your application during a Facebook Login flow.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (BOOL)handleOpenURL:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>URL</Name>
					<Abstract type="html">the URL that was passed to the application delegate&apos;s handleOpenURL method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the URL starts with &apos;fb[app_id]://authorize and hence was handled
by SDK, NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/handleOpenURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/logout</TokenIdentifier>
			<Abstract type="html">Invalidate the current user session by removing the access token in
memory and clearing the browser cookie.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (void)logout</Declaration>
			
			
			<Anchor>//api/name/logout</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/logout:</TokenIdentifier>
			<Abstract type="html">Invalidate the current user session by removing the access token in
memory and clearing the browser cookie.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (void)logout:(id&lt;FBSessionDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/logout:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/requestWithParams:andDelegate:</TokenIdentifier>
			<Abstract type="html">Make a request to Facebook&apos;s REST API with the given
parameters. One of the parameter keys must be &quot;method&quot; and its value
should be a valid REST server API method.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (FBRequest *)requestWithParams:(NSMutableDictionary *)params andDelegate:(id&lt;FBRequestDelegate&gt;)delegate</Declaration>
			
			<ReturnValue><Abstract type="html">FBRequest*
Returns a pointer to the FBRequest object.</Abstract></ReturnValue>
			<Anchor>//api/name/requestWithParams:andDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/requestWithMethodName:andParams:andHttpMethod:andDelegate:</TokenIdentifier>
			<Abstract type="html">Make a request to Facebook&apos;s REST API with the given method name and
parameters.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (FBRequest *)requestWithMethodName:(NSString *)methodName andParams:(NSMutableDictionary *)params andHttpMethod:(NSString *)httpMethod andDelegate:(id&lt;FBRequestDelegate&gt;)delegate</Declaration>
			
			<ReturnValue><Abstract type="html">FBRequest*
Returns a pointer to the FBRequest object.</Abstract></ReturnValue>
			<Anchor>//api/name/requestWithMethodName:andParams:andHttpMethod:andDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/requestWithGraphPath:andDelegate:</TokenIdentifier>
			<Abstract type="html">Make a request to the Facebook Graph API without any parameters.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (FBRequest *)requestWithGraphPath:(NSString *)graphPath andDelegate:(id&lt;FBRequestDelegate&gt;)delegate</Declaration>
			
			<ReturnValue><Abstract type="html">FBRequest*
Returns a pointer to the FBRequest object.</Abstract></ReturnValue>
			<Anchor>//api/name/requestWithGraphPath:andDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/requestWithGraphPath:andParams:andDelegate:</TokenIdentifier>
			<Abstract type="html">Make a request to the Facebook Graph API with the given string
parameters using an HTTP GET (default method).</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (FBRequest *)requestWithGraphPath:(NSString *)graphPath andParams:(NSMutableDictionary *)params andDelegate:(id&lt;FBRequestDelegate&gt;)delegate</Declaration>
			
			<ReturnValue><Abstract type="html">FBRequest*
Returns a pointer to the FBRequest object.</Abstract></ReturnValue>
			<Anchor>//api/name/requestWithGraphPath:andParams:andDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/requestWithGraphPath:andParams:andHttpMethod:andDelegate:</TokenIdentifier>
			<Abstract type="html">Make a request to the Facebook Graph API with the given
HTTP method and string parameters. Note that binary data parameters
(e.g. pictures) are not yet supported by this helper function.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (FBRequest *)requestWithGraphPath:(NSString *)graphPath andParams:(NSMutableDictionary *)params andHttpMethod:(NSString *)httpMethod andDelegate:(id&lt;FBRequestDelegate&gt;)delegate</Declaration>
			
			<ReturnValue><Abstract type="html">FBRequest*
Returns a pointer to the FBRequest object.</Abstract></ReturnValue>
			<Anchor>//api/name/requestWithGraphPath:andParams:andHttpMethod:andDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/dialog:andDelegate:</TokenIdentifier>
			<Abstract type="html">Generate a UI dialog for the request action.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (void)dialog:(NSString *)action andDelegate:(id&lt;FBDialogDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/dialog:andDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/dialog:andParams:andDelegate:</TokenIdentifier>
			<Abstract type="html">Generate a UI dialog for the request action with the provided parameters.</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (void)dialog:(NSString *)action andParams:(NSMutableDictionary *)params andDelegate:(id&lt;FBDialogDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/dialog:andParams:andDelegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/isSessionValid</TokenIdentifier>
			<Abstract type="html">boolean - whether this object has an non-expired session token</Abstract>
			<DeclaredIn>Facebook.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isSessionValid</Declaration>
			
			<ReturnValue><Abstract type="html">boolean - whether this object has an non-expired session token</Abstract></ReturnValue>
			<Anchor>//api/name/isSessionValid</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/dealloc</TokenIdentifier>
			<Abstract type="html">Override NSObject : free the space</Abstract>
			<DeclaredIn>Facebook.m</DeclaredIn>			
			
			<Declaration>- (void)dealloc</Declaration>
			
			
			<Anchor>//api/name/dealloc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/getOwnBaseUrl</TokenIdentifier>
			<Abstract type="html">A private function for getting the app&apos;s base url.</Abstract>
			<DeclaredIn>Facebook.m</DeclaredIn>			
			
			<Declaration>- (NSString *)getOwnBaseUrl</Declaration>
			
			
			<Anchor>//api/name/getOwnBaseUrl</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/parseURLParams:</TokenIdentifier>
			<Abstract type="html">A function for parsing URL parameters.</Abstract>
			<DeclaredIn>Facebook.m</DeclaredIn>			
			
			<Declaration>- (NSDictionary *)parseURLParams:(NSString *)query</Declaration>
			
			
			<Anchor>//api/name/parseURLParams:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/fbDialogLogin:expirationDate:</TokenIdentifier>
			<Abstract type="html">Set the authToken and expirationDate after login succeed</Abstract>
			<DeclaredIn>Facebook.m</DeclaredIn>			
			
			<Declaration>- (void)fbDialogLogin:(NSString *)token expirationDate:(NSDate *)expirationDate</Declaration>
			
			
			<Anchor>//api/name/fbDialogLogin:expirationDate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Facebook/fbDialogNotLogin:</TokenIdentifier>
			<Abstract type="html">Did not login call the not login delegate</Abstract>
			<DeclaredIn>Facebook.m</DeclaredIn>			
			
			<Declaration>- (void)fbDialogNotLogin:(BOOL)cancelled</Declaration>
			
			
			<Anchor>//api/name/fbDialogNotLogin:</Anchor>
		</Token>
		
	</File>
</Tokens>